<?xml version="1.0"?><st-source><!-- Name: Demo_FirePackageName: Demo_FireParcel: #('Demo_Fire')ParcelName: Demo_FireDate: 4:06:55 pm May 27, 2018 --><time-stamp>From VisualWorksÂ® NonCommercial, 7.6 of lundi 3 mars 2008 on dimanche 27 mai 2018 at 16:06:55</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><name-space><name>Demo_Fire</name><environment>CormasNS.Models</environment><private>false</private><imports>			private Smalltalk.*			private CormasNS.Kernel.*			</imports><category>FireAutomataCategory</category><attributes><package>Demo_Fire</package></attributes></name-space><class><name>FireAggregate</name><environment>CormasNS.Models.Demo_Fire</environment><super>CormasNS.Kernel.SpatialEntityAggregate</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>FireAutomataCategory</category><attributes><package>Demo_Fire</package></attributes></class><class><name>Plot</name><environment>CormasNS.Models.Demo_Fire</environment><super>CormasNS.Kernel.SpatialEntityCell</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>FireAutomataCategory</category><attributes><package>Demo_Fire</package></attributes></class><class><name>Demo_Fire</name><environment>CormasNS.Models.Demo_Fire</environment><super>CormasNS.Kernel.CormasModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>thePlots xSize ySize theFireAggregates </inst-vars><class-inst-vars>newFires density </class-inst-vars><imports></imports><category>FireAutomataCategory</category><attributes><package>Demo_Fire</package></attributes></class><methods><class-id>CormasNS.Models.Demo_Fire.FireAggregate</class-id> <category>control</category><body package="Demo_Fire" selector="ignite">ignite	self components do: [: p | p ignite].</body><body package="Demo_Fire" selector="spread">spread	self swellConstraint: [: p | p state = #forest].</body></methods><methods><class-id>CormasNS.Models.Demo_Fire.FireAggregate</class-id> <category>+ components - managing</category><body package="Demo_Fire" selector="addComponents:">addComponents: aCollecOfSpatialEntities		super addComponents: aCollecOfSpatialEntities.	aCollecOfSpatialEntities do: [:c | c ignite]</body></methods><methods><class-id>CormasNS.Models.Demo_Fire.FireAggregate class</class-id> <category>testing</category><body package="Demo_Fire" selector="isAbstract">isAbstract ^false</body></methods><methods><class-id>CormasNS.Models.Demo_Fire.FireAggregate class</class-id> <category>pov symbols</category><body package="Demo_Fire" selector="defaultColor">defaultColor"Returns an array containing the settings of a Spatial entity pov symbol in the following order:(color red) (color green) (color blue)(Automatically defined by Cormas)."^Array with: 1.0 with: 0.24002 with: 0.0</body></methods><methods><class-id>CormasNS.Models.Demo_Fire.Plot</class-id> <category>accessing</category><body package="Demo_Fire" selector="state">state	"Getter accessor with initial value = #empty. 	This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !! "	^state ifNil:[state := #empty]</body><body package="Demo_Fire" selector="state:">state: anObject	"Setter accessor of attribute state. 	This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!  "	state = anObject ifTrue:[^nil].   "for optimization"	state := anObject.	self changed</body></methods><methods><class-id>CormasNS.Models.Demo_Fire.Plot</class-id> <category>* control</category><body package="Demo_Fire" selector="ignite">ignite	"Change its state for #forest (no refresh of the display)"		self state: #fire.	Demo_Fire registerNewFire</body></methods><methods><class-id>CormasNS.Models.Demo_Fire.Plot</class-id> <category>init</category><body package="Demo_Fire" selector="initForest">initForest	self state: #forest.</body><body package="Demo_Fire" selector="initRandomState">initRandomState		self state: (Cormas selectRandomlyFrom: #(#forest #empty))</body></methods><methods><class-id>CormasNS.Models.Demo_Fire.Plot</class-id> <category>* pov</category><body package="Demo_Fire" selector="povState">povState"return the value of the attribute"	^self state</body></methods><methods><class-id>CormasNS.Models.Demo_Fire.Plot class</class-id> <category>testing</category><body package="Demo_Fire" selector="isAbstract">isAbstract ^false</body></methods><methods><class-id>CormasNS.Models.Demo_Fire.Plot class</class-id> <category>- default value</category><body package="Demo_Fire" selector="state_default">state_default 	"Return the default value of attribute #state : #empty.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^#empty</body></methods><methods><class-id>CormasNS.Models.Demo_Fire.Plot class</class-id> <category>+ parameter unit</category><body package="Demo_Fire" selector="state_type">state_type 	"Return the type of attribute #state.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^ByteSymbol</body></methods><methods><class-id>CormasNS.Models.Demo_Fire.Plot class</class-id> <category>pov symbols</category><body package="Demo_Fire" selector="SpatialEntityPOV_empty">SpatialEntityPOV_empty"Returns an array containing the settings of a Spatial entity pov symbol in the following order:(color red) (color green) (color blue)(Automatically defined by Cormas)."^Array with: 1.0 with: 1.0 with: 0.810035</body><body package="Demo_Fire" selector="SpatialEntityPOV_fire">SpatialEntityPOV_fire"Returns an array containing the settings of a Spatial entity pov symbol in the following order:(color red) (color green) (color blue)(Automatically defined by Cormas)."^Array with: 1.0 with: 0.0 with: 0.0</body><body package="Demo_Fire" selector="SpatialEntityPOV_forest">SpatialEntityPOV_forest"Returns an array containing the settings of a Spatial entity pov symbol in the following order:(color red) (color green) (color blue)(Automatically defined by Cormas)."^Array with: 0.0 with: 0.670004 with: 0.0</body></methods><methods><class-id>CormasNS.Models.Demo_Fire.Demo_Fire</class-id> <category>init</category><body package="Demo_Fire" selector="init_4">init_4		self init: 4</body><body package="Demo_Fire" selector="init_6">init_6		self init: 6</body><body package="Demo_Fire" selector="init_8">init_8		self init: 8</body><body package="Demo_Fire" selector="init_FireLine">init_FireLine	"Settings like the Fire model of Netlogo: http://netlogoweb.org/launch#http://netlogoweb.org/assets/modelslib/Sample%20Models/Earth%20Science/Fire.nlogo "		| plotsInForest |	self xSize: 100.	self ySize: 100.	self createGridX: self xSize Y: self ySize neighbourhood: 4 closed: true.	plotsInForest := self pickCellsN: (self thePlots size * self class density / 100) rounded.	plotsInForest do: [:p | p initForest].	"or:  self ask: plotsInForest toDo: #initForest."	(FireAggregate newWith: (self cellsOfColumn: 1)) ignite.		self openInterfaceWithHabitusName: #defaultNoDelimitor</body></methods><methods><class-id>CormasNS.Models.Demo_Fire.Demo_Fire</class-id> <category>control</category><body package="Demo_Fire" selector="step:">step: t	self class newFires: 0.	self theFireAggregates do: [: f | f spread].	self class newFires = 0 ifTrue:[self finishSimulation].</body></methods><methods><class-id>CormasNS.Models.Demo_Fire.Demo_Fire</class-id> <category>accessing</category><body package="Demo_Fire" selector="theFireAggregates">theFireAggregates	"Returns a collection of all the instances of the sub classes collected by cormasModel.	This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"^theFireAggregates ifNil:[theFireAggregates := IndexedSet new]</body><body package="Demo_Fire" selector="theFireAggregates:">theFireAggregates: aNewCollection	"Set a new collection for theXXXs attribute.	This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	theFireAggregates := aNewCollection</body><body package="Demo_Fire" selector="thePlots">thePlots	"Returns a collection of all the instances of the sub classes collected by cormasModel.	This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"^thePlots ifNil:[thePlots := IndexedSet new]</body><body package="Demo_Fire" selector="thePlots:">thePlots: aNewCollection	"Set a new collection for theXXXs attribute.	This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	thePlots := aNewCollection</body><body package="Demo_Fire" selector="xSize">xSize	"Getter accessor with initial value = 50 columns. 	This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !! "	^xSize ifNil:[xSize := 50]</body><body package="Demo_Fire" selector="xSize:">xSize: aSmallInteger 	"Setter accessor of attribute xSize (Unit: columns). 	This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!  "	xSize := aSmallInteger</body><body package="Demo_Fire" selector="ySize">ySize	"Getter accessor with initial value = 50 lines. 	This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !! "	^ySize ifNil:[ySize := 50]</body><body package="Demo_Fire" selector="ySize:">ySize: aSmallInteger 	"Setter accessor of attribute ySize (Unit: lines). 	This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!  "	ySize := aSmallInteger</body></methods><methods><class-id>CormasNS.Models.Demo_Fire.Demo_Fire</class-id> <category>probes</category><body package="Demo_Fire" selector="fireSize">fireSize "return the sum of Plots in fire" ^Cormas sum:  (self theFireAggregates collect: [: ag | ag size])</body><body package="Demo_Fire" selector="forestSize">forestSize "return the sum of Plots in forest" ^(self thePlots select: [:p| p state = #forest]) size</body><body package="Demo_Fire" selector="newFires">newFires "return the sum of the new fires" ^self class newFires</body></methods><methods><class-id>CormasNS.Models.Demo_Fire.Demo_Fire</class-id> <category>instance-creation</category><body package="Demo_Fire" selector="init:">init: nbOfNeighbours	"Purpose: create the initial state of the 'world'.1- Create a grid of plots (sSize by ySize) with nbOfNeighbours (the argument) as a number (4, 6 or 8) that defines the number of neighbours for each plot. 2- Then, X plots (a proportion of #density) are selected to set their state as #forest.3- set one randomly choosen plot in fire.4- Display the grid"	| plotsInForest |	self createGridX: (self xSize) Y: (self ySize) neighbourhood: nbOfNeighbours closed: true.	plotsInForest := self pickCellsN: (self thePlots size * self class density / 100) rounded.	plotsInForest do: [:p | p initForest]  "or:  self ask: plotsInForest toDo: #initForest.".	(FireAggregate newWith: (OrderedCollection with: self pickCell)) ignite.		self openInterfaceWithHabitusName: #default</body></methods><methods><class-id>CormasNS.Models.Demo_Fire.Demo_Fire class</class-id> <category>description</category><body package="Demo_Fire" selector="authors">authors^ 'Pierre Bommel'	</body><body package="Demo_Fire" selector="comments">comments^ 'In this version, to simulate the fire diffusion, a fire entity (called FireAggregate) ignites the cell where it is located, then it spreads on the neighboors in forest by swelling from its surrounded cells that are in forest.In that case, only the fireAggregates are activated by the scheduler.For more information, see: http://cormas.cirad.fr/fr/applica/fireautomata.htm '	</body><body package="Demo_Fire" selector="cormasCompatibleVersion">cormasCompatibleVersion^ #(2018 5 14 11 46 52)</body><body package="Demo_Fire" selector="creationDate">creationDate^ 'dimanche 13 mai 2018'	</body><body package="Demo_Fire" selector="currentDeveloperName">currentDeveloperName^ 'Pierre Bommel'	</body><body package="Demo_Fire" selector="emails">emails^ 'bommel@cirad.fr'	</body><body package="Demo_Fire" selector="lastUpdate">lastUpdate^ 'dimanche 27 mai 2018'	</body><body package="Demo_Fire" selector="version">version^ 'Fire_3_FireAggregate.pcl'	</body><body package="Demo_Fire" selector="versionComments">versionComments^ '  --------------------- FireAutomata.pcl --------------------- Date: 2018.5.4 *** Developer: Pierre Bommel *** --------------------- Fire.pcl --------------------- Date: 2018.5.4 *** Developer: Pierre Bommel *** --------------------- Fire_CA.pcl --------------------- Date: 2018.5.4Version Cellular Automata standard. *** Developer: Pierre Bommel *** --------------------- Fire_CA.pcl --------------------- Date: 2018.5.4 *** Developer: Pierre Bommel *** --------------------- Fire_fireEntities.pcl --------------------- Date: 2018.5.42 entities: Plot &amp; FireEntity *** Developer: Pierre Bommel *** --------------------- Fire_fireEntities.pcl --------------------- Date: 2018.5.4 *** Developer: Pierre Bommel *** --------------------- Fire_fireEntities.pcl --------------------- Date: 2018.5.4 *** Developer: Pierre Bommel *** --------------------- Fire_fireEntities.pcl --------------------- Date: 2018.5.4init_FireLine, for a Netlogo like simulation *** Developer: Pierre Bommel *** --------------------- Fire_fireEntitiesAging.pcl --------------------- Date: 2018.5.4 *** Developer: Pierre Bommel *** --------------------- Demo_Fire.pcl --------------------- Date: 2018.5.4 *** Developer: Pierre Bommel *** --------------------- Demo_Fire_FireEntityAging.pcl --------------------- Date: 2018.5.4 *** Developer: Pierre Bommel *** --------------------- Demo_Fire_FireEntity.pcl --------------------- Date: 2018.5.4Fire do not get older *** Developer: Pierre Bommel *** --------------------- Demo_Fire_FireAggregate.pcl --------------------- Date: 2018.5.4 *** Developer: Pierre Bommel *** --------------------- Demo_Fire_FireAggregate.pcl --------------------- Date: 2018.5.4 *** Developer: Pierre Bommel *** --------------------- Demo_Fire_FireAggregate.pcl --------------------- Date: 2018.5.4With the model s comments *** Developer: Pierre Bommel *** --------------------- Demo_Fire_FireAggregate.pcl --------------------- Date: 2018.5.4 *** Developer: Pierre Bommel *** --------------------- Demo_Fire_FireAggregate.pcl --------------------- Date: 2018.5.14 *** Developer: Pierre Bommel *** --------------------- Fire_3_FireAggregate.pcl --------------------- Date: 2018.5.14 *** Developer: Pierre Bommel ***'	</body><body package="Demo_Fire" selector="vwCompatibleVersion">vwCompatibleVersion^ '7.6'	</body></methods><methods><class-id>CormasNS.Models.Demo_Fire.Demo_Fire class</class-id> <category>accessing</category><body package="Demo_Fire" selector="density">density	"Getter accessor with initial value = 58 % of forest. 	This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !! "	^density ifNil:[density := 58]</body><body package="Demo_Fire" selector="density:">density: aSmallInteger 	"Setter accessor of attribute density (Unit: % of forest). 	This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!  "	density := aSmallInteger</body><body package="Demo_Fire" selector="newFires">newFires	"Getter accessor with initial value = 0 fires. 	This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !! "	^newFires ifNil:[newFires := 0]</body><body package="Demo_Fire" selector="newFires:">newFires: aSmallInteger 	"Setter accessor of attribute newFires (Unit: fires). 	This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!  "	newFires := aSmallInteger</body><body package="Demo_Fire" selector="registerNewFire">registerNewFire	self newFires: self newFires + 1</body></methods><methods><class-id>CormasNS.Models.Demo_Fire.Demo_Fire class</class-id> <category>+ parameter unit</category><body package="Demo_Fire" selector="density_type">density_type 	"Return the type of attribute #density.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^SmallInteger</body><body package="Demo_Fire" selector="density_unit">density_unit 	"Return the unit of attribute #density.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^ '% of forest'</body><body package="Demo_Fire" selector="newFires_type">newFires_type 	"Return the type of attribute #newFires.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^SmallInteger</body><body package="Demo_Fire" selector="newFires_unit">newFires_unit 	"Return the unit of attribute #newFires.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^ 'fires'</body><body package="Demo_Fire" selector="xSize_type">xSize_type 	"Return the type of attribute #xSize.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^SmallInteger</body><body package="Demo_Fire" selector="xSize_unit">xSize_unit 	"Return the unit of attribute #xSize.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^ 'columns'</body><body package="Demo_Fire" selector="ySize_type">ySize_type 	"Return the type of attribute #ySize.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^SmallInteger</body><body package="Demo_Fire" selector="ySize_unit">ySize_unit 	"Return the unit of attribute #ySize.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^ 'lines'</body></methods><methods><class-id>CormasNS.Models.Demo_Fire.Demo_Fire class</class-id> <category>- default value</category><body package="Demo_Fire" selector="density_default">density_default 	"Return the default value of attribute #density : 58.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^58</body><body package="Demo_Fire" selector="newFires_default">newFires_default 	"Return the default value of attribute #newFires : 0.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^0</body><body package="Demo_Fire" selector="xSize_default">xSize_default 	"Return the default value of attribute #xSize : 50.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^50</body><body package="Demo_Fire" selector="ySize_default">ySize_default 	"Return the default value of attribute #ySize : 50.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^50</body></methods><methods><class-id>CormasNS.Models.Demo_Fire.Demo_Fire class</class-id> <category>- probes</category><body package="Demo_Fire" selector="colorOfProbe_fireSize">colorOfProbe_fireSize  ^ ColorValue red</body><body package="Demo_Fire" selector="colorOfProbe_forestSize">colorOfProbe_forestSize  ^ (ColorValue red: 0.0 green: 0.685142 blue: 0.0)</body><body package="Demo_Fire" selector="colorOfProbe_newFires">colorOfProbe_newFires  ^ ColorValue salmon</body></methods><methods><class-id>CormasNS.Models.Demo_Fire.Demo_Fire class</class-id> <category>SI_config</category><body package="Demo_Fire" selector="SIconfig_default">SIconfig_default"Returns an string containing the settings of the Spatial Interface configuration named default"^'configName:*defaultobservedEntitiesList:*#FireAggregate,#Plot,manipEntitiesList:*#FireAggregate,#Plot,createEntitiesList:*#FireAggregate,#Plot,manipMethods:*FireAggregate,addComponents:,ignite,spread,delete,flash,flashN,swell,swellConstraint:,swell_unrestricted,swell_unrestrictedConstraint:manipMethods:*Plot,ignite,flash,flashN,newState,updateStatepovMethods:*FireAggregate,defaultPOV,delimitors,povId,randomColorpovMethods:*Plot,defaultPOV,delimitors,povId,povState,randomColorattributes:*FireAggregateattributes:*Plot,state,stateinfoMethods:*FireAggregate,info_ClassName,info_ID,info_size,info_surfaceinfoMethods:*Plot,info_ClassName,info_IDprobeMethods:*FireAggregateprobeMethods:*PlotmanipWholePop:*FireAggregate,truemanipWholePop:*Plot,truecanChangeValues:*FireAggregate,truecanChangeValues:*Plot,truedefaultPov:*FireAggregate,defaultPOVdefaultPov:*Plot,povStatedefaultInfo:*Plot,nildelimiterSize:*ESE,pixel3delimitors:*FireAggregate,3,ColorValue blackdelimitors:*Plot,1,(ColorValue brightness: 0.700037)doHideCells:*falsedefaultTool:*toolInspectsiMenuFormat:*siMenuFullisUndoRedoEnabled:*trueisManipulateForTabletEnabled:*falseisSingleDefaultPovShown:*trueisSingleDefaultInfoShown:*truetrackLengthValue:*All,niltrackedAgents:*'</body><body package="Demo_Fire" selector="SIconfig_defaultNoDelimitor">SIconfig_defaultNoDelimitor"Returns an string containing the settings of the Spatial Interface configuration named defaultNoDelimitor"^'configName:*defaultNoDelimitorobservedEntitiesList:*#FireAggregate,#Plot,manipEntitiesList:*#FireAggregate,#Plot,createEntitiesList:*#FireAggregate,#Plot,manipMethods:*FireAggregate,addComponents:,ignite,spread,delete,flash,flashN,swell,swellConstraint:,swell_unrestricted,swell_unrestrictedConstraint:manipMethods:*Plot,ignite,flash,flashN,newState,updateStatepovMethods:*FireAggregate,defaultPOV,delimitors,povId,randomColorpovMethods:*Plot,defaultPOV,delimitors,povId,povState,randomColorattributes:*FireAggregateattributes:*Plot,state,stateinfoMethods:*FireAggregate,info_ClassName,info_ID,info_size,info_surfaceinfoMethods:*Plot,info_ClassName,info_IDprobeMethods:*FireAggregateprobeMethods:*PlotmanipWholePop:*FireAggregate,truemanipWholePop:*Plot,truecanChangeValues:*FireAggregate,truecanChangeValues:*Plot,truedefaultPov:*FireAggregate,defaultPOVdefaultPov:*Plot,povStatedefaultInfo:*Plot,nildelimiterSize:*ESE,pixel0delimitors:*FireAggregate,0,ColorValue blackdelimitors:*Plot,1,(ColorValue brightness: 0.429984)doHideCells:*falsedefaultTool:*toolInspectsiMenuFormat:*siMenuFullisUndoRedoEnabled:*trueisManipulateForTabletEnabled:*falseisSingleDefaultPovShown:*trueisSingleDefaultInfoShown:*truetrackLengthValue:*All,niltrackedAgents:*trackedAgents:,'</body></methods><methods><class-id>CormasNS.Models.Demo_Fire.Demo_Fire class</class-id> <category>+ description</category><body package="Demo_Fire" selector="howToRunIt">howToRunIt| txt |	txt := 'Just select an initialization method:' asText emphasizeAllWith: #(#bold #large).	txt := txt , '* init_4 (that create a grid with a neighbouhood of 4)   or* init_6 (that create a grid with a neighbouhood of 6)   or* init_8 (that create a grid with a neighbouhood of 8),  or even* init_FireLine to  get the Settings like the Fire model of Netlogo.Then click on APPLY' asText.	ComposedTextView open: txt asValue		label: 'How to run ' , self name , '     step-by-step instructions'		icon: (Icon constantNamed: #workspace)		extent: 450 @ 200</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>SpatialEntityAggregate</name><environment>CormasNS.Kernel</environment><super>CormasNS.Kernel.SpatialEntitySet</super><private>false</private><indexed-type>none</indexed-type><inst-vars>compactness </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>CormasKernel-Entities</category><attributes><package>Cormas</package></attributes></class><class><name>CormasModel</name><environment>CormasNS.Kernel</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>cormas timeStepValue channel activeInit activeControl spaceModel data simManager database collector defaultAttributesSetter sensitivitySetter delayedChanges allClassVarBOSS stepIsEnded </inst-vars><class-inst-vars>timeStep cellClass spatialClasses socialClasses passiveClasses povColorsDict visualStateIsOpen charts activeProbes activityDiagrams currentSimulation randUi autoUpdating threadDumps </class-inst-vars><imports></imports><category>CormasKernel-Interface</category><attributes><package>Cormas</package></attributes></class><class><name>SpatialEntityCell</name><environment>CormasNS.Kernel</environment><super>CormasNS.Kernel.SpatialEntityElement</super><private>false</private><indexed-type>none</indexed-type><inst-vars>state bufferState </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>CormasKernel-Entities</category><attributes><package>Cormas</package></attributes></class></st-source>