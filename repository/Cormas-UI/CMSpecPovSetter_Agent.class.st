"
CMSpecPovSetter_Agent example.

For the Collaborators Part: State my main collaborators and one line about how I interact with them. 

Public API and Key Messages

- message one   
- message two 
- (for bonus points) how to create instances.

   One simple example is simply gorgeous.
 
Internal Representation and Key Implementation Points.

    Instance Variables
	colorChooser:		<Object>
	isDistortable:		<Object>
	occupantPosition:		<Object>
	oldValue:		<Object>
	tailleHolder:		<Object>
	tailleSlider:		<Object>


    Implementation Points
"
Class {
	#name : #'CMSpecPovSetter_Agent',
	#superclass : #CMSpecPovSetter,
	#instVars : [
		'tailleSlider',
		'tailleHolder',
		'colorChooser',
		'oldValue',
		'occupantPosition',
		'isDistortable'
	],
	#category : #'Cormas-UI-Spec1-PoV'
}

{ #category : #adding }
CMSpecPovSetter_Agent >> addSameSymbolAs: aSymbolString ofEntity: aClass [
	
	| aString |
	(aString := self addSymbolPov) ifNotNil: [
		selectedClass povDict
			at: aString asSymbol
			put: (aClass povDict at: aSymbolString asSymbol) copy.
		self updateMenuAddSameAs.
		self listSymbolsChanged ]
]

{ #category : #'menu-symbol' }
CMSpecPovSetter_Agent >> addSubMenuSymbolSameAsTo: aMenuBuilder from: aListOfStrings for: aClass [
	"a selection of an item calls the method addSameSymbolAs: aSymbol ofEntity: aClass"
	
	aMenuBuilder beginSubMenuLabeled: aClass name asString.
	aListOfStrings
		do:
			[:aSymbolString | 
			aMenuBuilder
				addLabel: aSymbolString
				value: [self addSameSymbolAs: aSymbolString ofEntity: aClass]].
	aMenuBuilder endSubMenu.
	aMenuBuilder line
]

{ #category : #action }
CMSpecPovSetter_Agent >> addSymbolPov: aString [
	
	(super addSymbolPov: aString) ifNotNil: [self updateMenuAddSameAs].
	^aString
]

{ #category : #'initialize-release' }
CMSpecPovSetter_Agent >> initialize [
	super initialize.
	tailleHolder := 1" asValue".
	"tailleHolder onChangeSend: #sizeSliderChanged to: self.
	tailleSlider := RangeAdaptor on: tailleHolder start: 0.1 stop: 1 grid: 0.1.
	self occupantPosition onChangeSend: #positionChanged to: self"
]

{ #category : #aspects }
CMSpecPovSetter_Agent >> isDistortable [
	"This method was generated by UIDefiner.  Any edits made here
	may be lost whenever methods are automatically defined.  The
	initialization provided below may have been preempted by an
	initialize method."
	
	^isDistortable isNil
		ifTrue: [isDistortable := false asValue]
		ifFalse: [isDistortable]
]

{ #category : #'menu-symbol' }
CMSpecPovSetter_Agent >> menuAddSameAs [
	"return a Menu : #menuSymbolePDV menu"
	
	^((self builder menuAt: #menuSymbolePDV) value atNameKey: #addSymbolSameAs)
		submenu
]

{ #category : #'menu-symbol' }
CMSpecPovSetter_Agent >> menuDefaultColor [
	"return a Menu : #menuSymbolePDV menu"
	
	^((self builder menuAt: #menuSymbolePDV) value atNameKey:
			#submenuSetDefaultColor) submenu
]

{ #category : #actions }
CMSpecPovSetter_Agent >> modifyPov: povName [
	
	selectedClass
		compile:
			(povName asString ,
					'\"return a symbol that is associated to an image"\   ^#aSymbol\')
				withCRs
		classified: 'pov'
		notifying: nil.
	self editMethod: povName fromClass: selectedClass
]

{ #category : #aspects }
CMSpecPovSetter_Agent >> occupantPosition [
	
	^occupantPosition isNil
		ifTrue: [occupantPosition := #center asValue]
		ifFalse: [occupantPosition]
]

{ #category : #action }
CMSpecPovSetter_Agent >> removeSymbolPov [
	
	| aString |
	aString := super removeSymbolPov.
	aString
		ifNotNil:
			[selectedClass povDict
				removeKey: aString asSymbol
				ifAbsent: [nil].
			self updateMenuAddSameAs]
]

{ #category : #'saving&removing pov symbols' }
CMSpecPovSetter_Agent >> saveBitmapImage: aPOV intoClass: aClass symbol: aSymbol [
	"Dans le cas d'image Bitmap, l'image est sauvegard√©e au niveau de la classe de l'entit√© /// protocol 'images - bitmap'
(dans le cas d'un VectorialPOV, la sauveagrde se fait au niveau du fichier ev, dans le cas on inscrit l'ensemble des attributs de l'image).
Par contre l'attribut position du POV, m√™me pour un POV d type Bitmap image,est sauvegard√© adans le fichier ev "
	
	| image s class imageName |
	aPOV isBitmapPOV
		ifTrue:
			[image := aPOV bitmap figure image.
			class := aClass class.
			imageName := aSymbol , 'BitmapImage'.
			s := WriteStream on: (String new: image bits size // 8).
			s
				nextPutAll: imageName;
				cr.
			s
				tab;
				crtab;
				nextPutAll: '<resource: #image>';
				crtab;
				nextPut: $^.
			s nextPutAll: image minimalStorageString.
			class
				compile: s contents
				classified: 'pov symbols']
]

{ #category : #'menu-symbol' }
CMSpecPovSetter_Agent >> setModelClass: aClass [
	
	super setModelClass: aClass.	"set the background color adapted to class"
	(aClass inheritsFrom: CMAgent)
		ifFalse:
			[(self builder componentAt: #fond) component component
				insideColor: (Color red: 1.0 green: 0.624954 blue: 0.250031)].
	self initMenuAddSameAs
]

{ #category : #'menu-symbol' }
CMSpecPovSetter_Agent >> updateMenuAddSameAs [
	"a selection of one of this item create a new symbol which shape is a copy of the selected item"
	
	self visualizedEntities
		do:
			[:aClass | 
			self menuAddSameAs
				removeItem: (self menuAddSameAs menuItemLabeled: aClass name asString)].
	self initMenuAddSameAs
]

{ #category : #'menu-symbol' }
CMSpecPovSetter_Agent >> visualizedEntities [
	
	| ve |
	ve := self cormas currentModel visualizableClasses.
	ve removeAll: self cormas currentModel spatialClasses.
	ve removeAllSuchThat: [:c | c inheritsFrom: CMArcEntity].
	^ve
]
