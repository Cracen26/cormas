Class {
	#name : #HierarchieObs,
	#superclass : #UIApplicationModel,
	#instVars : [
		'higherLevels',
		'levelHolder',
		'oneLevel',
		'appelant',
		'degreMaxHolder'
	],
	#category : 'Cormas-Core-Observer'
}

{ #category : #init }
HierarchieObs class >> new [
	
	^super new
]

{ #category : #'interface specs' }
HierarchieObs class >> windowSpec [
	"UIPainter new openOnClass: self andSelector: #windowSpec"
	
	<resource: #canvas>
	^#(#FullSpec 
		#window: #(#WindowSpec 
			#label: 'Hierarchisation' 
			#bounds: #(#Rectangle 235 313 453 437)) 
		#component: #(#SpecCollection 
			#collection: #(#(#InputFieldSpec 
				#layout: #(#Rectangle 117 15 150 37) 
				#model: #levelHolder 
				#type: #number) #(#ActionButtonSpec 
				#layout: #(#Rectangle 186 11 217 42) 
				#model: #actionIncLevel 
				#label: '+' 
				#defaultable: true) #(#ActionButtonSpec 
				#layout: #(#Rectangle 161 11 192 42) 
				#model: #actionDecLevel 
				#label: '-' 
				#defaultable: true) #(#CheckBoxSpec 
				#layout: #(#Point 11 75) 
				#name: #higherLevels 
				#model: #higherLevels 
				#label: 'Affichage Niveau >') #(#CheckBoxSpec 
				#layout: #(#Point 11 99) 
				#name: #oneLevel 
				#model: #oneLevel 
				#label: 'Unifier les Niveaux') #(#InputFieldSpec 
				#layout: #(#Rectangle 117 41 150 63) 
				#model: #degreMaxHolder 
				#type: #number) #(#LabelSpec 
				#layout: #(#Point 14 42) 
				#label: 'Degre Max: ') #(#LabelSpec 
				#layout: #(#Point 14 16) 
				#label: 'Niveau Actuel:'))))
]

{ #category : #actions }
HierarchieObs >> actionDecLevel [
	
	oneLevel value ifTrue: [^self].
	levelHolder value: levelHolder value - 1
]

{ #category : #actions }
HierarchieObs >> actionIncLevel [
	
	oneLevel value ifTrue: [^self].
	levelHolder value: levelHolder value + 1
]

{ #category : #acces }
HierarchieObs >> appelant: v [
	
	appelant := v.
	higherLevels := appelant higherLevels asValue.
	oneLevel := appelant oneLevel asValue.
	levelHolder := appelant level asValue.
	degreMaxHolder := appelant degreMax asValue.
	levelHolder onChangeSend: #levelHolderChanged to: self.
	oneLevel onChangeSend: #oneLevelChanged to: self.
	higherLevels onChangeSend: #higherLevelsChanged to: self.
	degreMaxHolder onChangeSend: #degreMaxHolderChanged to: self
]

{ #category : #aspects }
HierarchieObs >> degreMaxHolder [
	"This method was generated by UIDefiner.  Any edits made here



	may be lost whenever methods are automatically defined.  The



	initialization provided below may have been preempted by an



	initialize method."
	
	^degreMaxHolder isNil
		ifTrue: [degreMaxHolder := 0 asValue]
		ifFalse: [degreMaxHolder]
]

{ #category : #changed }
HierarchieObs >> degreMaxHolderChanged [
	
	appelant degreMax: degreMaxHolder value
]

{ #category : #aspects }
HierarchieObs >> higherLevels [
	
	^higherLevels
]

{ #category : #changed }
HierarchieObs >> higherLevelsChanged [
	
	oneLevel value
		ifTrue:
			[higherLevels setValue: true.
			(self builder componentAt: #higherLevels) widget update: #value]
		ifFalse: [appelant higherLevels: higherLevels value]
]

{ #category : #'initialize-release' }
HierarchieObs >> initialize [
	
	
]

{ #category : #changed }
HierarchieObs >> levelChanged [
	
	appelant level: levelHolder value
]

{ #category : #aspects }
HierarchieObs >> levelHolder [
	"This method was generated by UIDefiner. Any edits made here



	may be lost whenever 
	methods are automatically defined. The



	initialization provided below may have been 
	preempted by an



	initialize method."
	
	^levelHolder isNil
		ifTrue: [levelHolder := 0 asValue]
		ifFalse: [levelHolder]
]

{ #category : #changed }
HierarchieObs >> levelHolderChanged [
	
	appelant level: levelHolder value
]

{ #category : #aspects }
HierarchieObs >> oneLevel [
	"This method was generated by UIDefiner.  Any edits made here



	may be lost whenever methods are automatically defined.  The



	initialization provided below may have been preempted by an



	initialize method."
	
	^oneLevel isNil
		ifTrue: [oneLevel := true asValue]
		ifFalse: [oneLevel]
]

{ #category : #changed }
HierarchieObs >> oneLevelChanged [
	
	appelant oneLevel: oneLevel value.
	oneLevel value
		ifTrue:
			[higherLevels setValue: true.
			(self builder componentAt: #higherLevels) widget update: #value]
]

{ #category : #actions }
HierarchieObs >> requestForWindowClose [
	
	super requestForWindowClose ifTrue: [appelant actionCloseHierarchie].
	^super requestForWindowClose
]
