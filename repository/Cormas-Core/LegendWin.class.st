"
LegendWin has not been commented.  The comment should state the purpose of the class and also explain any unobvious aspects of the implementation.

Instance Variables:
	classe	<Object>	description of classe
	isOpened	<Booleen>	description of isOpened
	legendes	<Object>	description of legendes
	methode	<Object>	description of methode
	sightingsTable	<Object>	description of sightingsTable
	superviseur	<Object>	description of superviseur
	tableInterface	<Object>	description of tableInterface


"
Class {
	#name : #LegendWin,
	#superclass : #UIApplicationModel,
	#instVars : [
		'legendes',
		'superviseur',
		'tableInterface',
		'sightingsTable',
		'classe',
		'methode',
		'isOpened'
	],
	#category : 'Cormas-Core-Tools'
}

{ #category : #'interface specs' }
LegendWin class >> windowSpec [
	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"
	
	<resource: #canvas>
	^#(FullSpec 
		#window: #(WindowSpec 
			#label: 'Unlabeled Canvas' 
			#bounds: #(Rectangle 493 317 814 704)) 
		#component: #(SpecCollection 
			#collection: #(#(LabelSpec 
				#layout: #(Point 11 5) 
				#name: #pdvMethod 
				#label: 'Label') #(TableViewSpec 
				#layout: #(LayoutFrame 0 -0.00934579 0 0.108527 0 1.0 0 0.997416) 
				#name: #povDict 
				#flags: 12 
				#colors: #(LookPreferences 
					#setForegroundColor: #(ColorValue #black) 
					#setBackgroundColor: #(ColorValue #white) 
					#setSelectionForegroundColor: #(ColorValue #black) 
					#setSelectionBackgroundColor: #(ColorValue #white)) 
				#model: #tableInterface 
				#tabable: false 
				#selectionStyle: #row))))
]

{ #category : #actions }
LegendWin >> affectLegend: legendList [
	
	| list |
	list := TwoDList
		on: legendList copy
		columns: 2
		rows: legendList size / 2.
	sightingsTable := SelectionInTable with: list.
	tableInterface := TableInterface new selectionInTable: sightingsTable	"tableInterface columnFormats: #(#left #left)."
]

{ #category : #acces }
LegendWin >> builder [
	
	^builder
]

{ #category : #acces }
LegendWin >> classe [
	"comment stating purpose of message"
	
	^classe
]

{ #category : #acces }
LegendWin >> classe: leg [
	"comment stating purpose of message"
	
	classe := leg
]

{ #category : #actions }
LegendWin >> closeRequest [
	"comment stating purpose of message"
	
	| key |
	key := OrderedCollection new.
	key add: classe.
	key add: methode.
	legendes legendes remove: self.
	super closeRequest
]

{ #category : #initialisation }
LegendWin >> init: cm [
	
	super initialize.
	classe := cm first.
	methode := cm at: 2
]

{ #category : #accessing }
LegendWin >> isOpened [
	
	^isOpened
]

{ #category : #accessing }
LegendWin >> isOpened: anObject [
	
	isOpened := anObject
]

{ #category : #acces }
LegendWin >> label: x [
	
	self builder label: x
]

{ #category : #acces }
LegendWin >> legendes [
	"comment stating purpose of message"
	
	^legendes
]

{ #category : #acces }
LegendWin >> legendes: leg [
	"comment stating purpose of message"
	
	legendes := leg
]

{ #category : #acces }
LegendWin >> methode [
	"comment stating purpose of message"
	
	^methode
]

{ #category : #acces }
LegendWin >> methode: leg [
	"comment stating purpose of message"
	
	methode := leg
]

{ #category : #actions }
LegendWin >> ouvrirVue [
	
	| bdr |
	bdr := self allButOpenInterface: #windowSpec.
	bdr window
]

{ #category : #aspects }
LegendWin >> tableInterface [
	"This method was generated by UIDefiner.  Any edits made here
	may be lost whenever methods are automatically defined.  The
	initialization provided below may have been preempted by an
	initialize method."
	
	^tableInterface isNil
		ifTrue:
			[tableInterface := TableInterface new
				selectionInTable: SelectionInTable new]
		ifFalse: [tableInterface]
]
