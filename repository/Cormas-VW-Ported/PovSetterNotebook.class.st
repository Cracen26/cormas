"
Notebook4Example demonstrates the use of a subcanvas within a notebook widget, making each page of the notebook a different application. 
"
Class {
	#name : #PovSetterNotebook,
	#superclass : #UIApplicationModel,
	#instVars : [
		'majorKeys',
		'cormasModel',
		'cormas'
	],
	#category : 'Cormas-VW-Ported'
}

{ #category : #'interface specs' }
PovSetterNotebook class >> windowSpec [
	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"
	
	<resource: #canvas>
	^#(FullSpec 
		#window: #(WindowSpec 
			#properties: #(PropertyListDictionary #sizeType #specifiedSize #positionType #screenCenter #openType #advanced) 
			#label: 'PoV Setter' 
			#min: #(Point 765 440) 
			#max: #(Point 0 0) 
			#bounds: #(Rectangle 674 449 1439 889) 
			#colors: #(LookPreferences)) 
		#component: #(SpecCollection 
			#collection: #(#(NoteBookSpec 
				#layout: #(LayoutFrame 4 0 5 0 772 0 438 0) 
				#name: #pageHolder 
				#isOpaque: true 
				#model: #majorKeys 
				#tabable: true 
				#binderWidth: 10 
				#rightInset: 100 
				#bottomInset: 0))))
]

{ #category : #'change messages' }
PovSetterNotebook >> changedExample [
	
	| sel modelClass povSetter |
	sel := self majorKeys selection.
	sel isNil ifTrue: [^self].
	modelClass := sel class.
	(modelClass inheritsFrom: CMArcEntity)
		ifTrue: [povSetter := PovSetter_Arc new]
		ifFalse:
			[modelClass isSpatialClass
				ifTrue: [povSetter := CMSpecPovSetter_SpatialEntity new]
				ifFalse: [povSetter := PovSetter_Agent new]].
	povSetter cormas: cormas.
	(self builder componentAt: #pageHolder) widget client: povSetter spec:
			#windowSpec.
	povSetter setModelClass: modelClass
]

{ #category : #accessing }
PovSetterNotebook >> cormas [
	
	^cormas
]

{ #category : #accessing }
PovSetterNotebook >> cormas: anObject [
	
	cormas := anObject
]

{ #category : #accessing }
PovSetterNotebook >> cormasModel [
	
	^cormasModel
]

{ #category : #accessing }
PovSetterNotebook >> cormasModel: anObject [
	
	cormasModel := anObject
]

{ #category : #aspects }
PovSetterNotebook >> majorKeys [
	"This method was generated by UIDefiner.  Any edits made here
	may be lost whenever methods are automatically defined.  The
	initialization provided below may have been preempted by an
	initialize method."
	
	^majorKeys isNil
		ifTrue: [majorKeys := SelectionInList new]
		ifFalse: [majorKeys]
]

{ #category : #'initialize-release' }
PovSetterNotebook >> openOn: aModel [
	
	| win |
	cormasModel := aModel.
	self prepareClasses.
	win := (self allButOpenInterface: #windowSpec) window.
	win open	"win openIn: (10 @ 20 extent: win maximumSize)"
]

{ #category : #'initialize-release' }
PovSetterNotebook >> prepareClasses [
	
	| modelClasses |
	modelClasses := OrderedCollection new.
	modelClasses add: cormasModel cellClass name.
	modelClasses
		addAll: (cormasModel compoundSpatialClasses collect: [:cl | cl name]).
	modelClasses
		addAll:
			((cormasModel socialClasses select: [:cl | cl isSituatedClass])
				collect: [:cl | cl name]).
	modelClasses
		addAll:
			((cormasModel passiveObjectClasses select: [:cl | cl isSituatedClass])
				collect: [:cl | cl name]).
	majorKeys := SelectionInList with: modelClasses.	"asSortedCollection"
	majorKeys selectionIndexHolder onChangeSend: #changedExample to: self
]

{ #category : #'initialize-release' }
PovSetterNotebook >> requestForWindowClose [
	
	cormas visualStateWin: nil.
	cormasModel := nil.
	^super requestForWindowClose
]
